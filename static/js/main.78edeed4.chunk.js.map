{"version":3,"sources":["serviceWorker.js","components/Appbar.jsx","components/Drawer.jsx","components/DeleteTaskModal.jsx","components/AddTaskModal.jsx","components/AddListModal.jsx","components/DeleteListModal.jsx","views/Main.jsx","App.jsx","reducers.js","index.js","localStorage.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","useStyles","makeStyles","theme","grow","flexGrow","position","top","zIndex","menuButton","marginRight","spacing","title","Object","defineProperty","display","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","_ref","listId","params","id","dispatch","useDispatch","classes","_React$useState","React","useState","_React$useState2","slicedToArray","anchorEl","setAnchorEl","_React$useState3","_React$useState4","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","_useState","_useState2","mobileMenu","setMobileMenu","searchInput","_useState3","_useState4","value","setValue","onChange","e","target","type","useInput","handleMobileMenuClose","handleMenuClose","renderMenu","react_default","a","createElement","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Add_default","PlaylistAdd_default","className","AppBar","appbar","Toolbar","edge","List_default","Search_default","InputBase","assign","placeholder","root","input","inputProps","aria-controls","aria-haspopup","event","currentTarget","MoreVert_default","list","fullList","SwipeableTemporaryDrawer","history","drawer","useSelector","lists","push","concat","toggleDrawer","key","SwipeableDrawer","onOpen","role","onKeyDown","List_List","map","ListItem","selected","button","ListItemText","primary","name","ListItemSecondaryAction","Remove_default","AlertDialog","deleteTaskModal","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","FormDialog","addTaskModal","field","useRef","taskInput","TextField","ref","margin","label","fullWidth","Math","random","checked","addListModal","deleteListModal","background","paper","CheckboxList","tasks","filter","task","RegExp","test","taskId","undefined","dense","ListItemIcon","Checkbox","tabIndex","disableRipple","App","react_router_dom","react_router","path","component","Appbar","Drawer","DeleteListModal_AlertDialog","AddListModal_FormDialog","Container","fixed","style","exact","render","props","initialList","combineReducers","arguments","length","_ref2","toConsumableArray","_ref4","_ref5","_ref7","_ref6","_ref3","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","reducers","subscribe","stringify","setItem","saveState","getState","ReactDOM","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.78edeed4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport ListIcon from '@material-ui/icons/List';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n    position: 'sticky',\n    top: '0',\n    zIndex: '2',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar({ match }) {\n  const listId = match.params.id;\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n\n  const [mobileMenu, setMobileMenu] = useState(false);\n\n  const useInput = () => {\n    const [value, setValue] = useState('');\n    const onChange = (e) => {\n      setValue(e.target.value);\n      dispatch({ type: 'SET_SEARCH', value });\n    };\n    return { value, onChange };\n  };\n\n  const searchInput = useInput();\n\n  function handleMobileMenuClose() {\n    setMobileMenu(false);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n    setMobileMenu(true);\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={mobileMenu}\n      onClose={handleMobileMenuClose}\n      onClick={handleMobileMenuClose}\n    >\n      <MenuItem onClick={() => dispatch({ type: 'OPEN_ADD_TASK_MODAL', value: listId })}>\n        <IconButton aria-label=\"Добавить задачу\" color=\"inherit\">\n          <AddIcon />\n        </IconButton>\n        <p>Добавить задачу</p>\n      </MenuItem>\n      <MenuItem onClick={() => dispatch({ type: 'OPEN_ADD_TASK_MODAL', value: listId })}>\n        <IconButton aria-label=\"Добавить список\" color=\"inherit\">\n          <PlaylistAddIcon />\n        </IconButton>\n        <p>Добавить список</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" className={classes.appbar}>\n        <Toolbar>\n          <IconButton\n            onClick={() => dispatch({ type: 'TOGGLE_DRAWER' })}\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n          >\n            <ListIcon />\n          </IconButton>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Поиск…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'Search' }}\n              {...searchInput}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton onClick={() => dispatch({ type: 'OPEN_ADD_TASK_MODAL', value: listId })} aria-label=\"Добавить задачу\" color=\"inherit\">\n              <AddIcon />\n            </IconButton>\n            <IconButton onClick={() => dispatch({ type: 'OPEN_ADD_LIST_MODAL' })} aria-label=\"Добавить список\" color=\"inherit\">\n              <PlaylistAddIcon />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"Показать больше\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useSelector, useDispatch } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function SwipeableTemporaryDrawer({ history, match }) {\n  const { id } = match.params;\n\n  const drawer = useSelector(state => state.drawer);\n  const lists = useSelector(state => state.lists);\n  const dispatch = useDispatch();\n\n  if (!id) {\n    history.push(`/${lists[0].id}`);\n  }\n\n  const classes = useStyles();\n\n  const toggleDrawer = (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    dispatch({ type: 'TOGGLE_DRAWER' });\n  };\n\n  const handleRemove = (listId) => {\n    dispatch({ type: 'OPEN_DELETE_LIST_MODAL', value: listId });\n  };\n\n  const sideList = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onKeyDown={toggleDrawer}\n      onClick={toggleDrawer}\n    >\n      <List>\n        {lists.map(list => (\n          <ListItem selected={list.id === id} onClick={() => history.push(`/${list.id}`)} button key={list.id}>\n            <ListItemText primary={list.name} />\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => handleRemove(list.id)} edge=\"end\" aria-label=\"Comments\">\n                <RemoveIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <SwipeableDrawer\n        open={drawer}\n        onClose={toggleDrawer}\n        onOpen={toggleDrawer}\n      >\n        {sideList('left')}\n      </SwipeableDrawer>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function AlertDialog() {\n  const deleteTaskModal = useSelector(state => state.deleteTaskModal);\n  const dispatch = useDispatch();\n\n  function handleClose() {\n    dispatch({ type: 'CLOSE_DELETE_TASK_MODAL' });\n  }\n\n  function handleDelete() {\n    dispatch({ type: 'CLOSE_DELETE_TASK_MODAL' });\n    dispatch({ type: 'REMOVE_TASK', value: deleteTaskModal });\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={deleteTaskModal}\n        onClose={() => handleClose()}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Удалить эту задача?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Вы действительно хотите удалить эту задачу?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose()} color=\"primary\">\n            Отмена\n          </Button>\n          <Button onClick={() => handleDelete(deleteTaskModal)} color=\"secondary\" autoFocus>\n            Удалить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function FormDialog() {\n  const addTaskModal = useSelector(state => state.addTaskModal);\n  const dispatch = useDispatch();\n\n  const field = useRef('');\n\n  const useInput = () => {\n    const [value, setValue] = useState(null);\n    const onChange = e => setValue(e.target.value);\n    return { value, onChange };\n  };\n  const taskInput = useInput();\n\n  function handleClose() {\n    dispatch({ type: 'CLOSE_ADD_TASK_MODAL' });\n  }\n\n  function handleAdd() {\n    dispatch({ type: 'CLOSE_ADD_TASK_MODAL' });\n    dispatch({\n      type: 'ADD_TASK',\n      value: {\n        listId: addTaskModal,\n        id: `${Math.random() * 1000000 & 0xfffff}`,\n        name: taskInput.value,\n        checked: false,\n      },\n    });\n    taskInput.onChange({ target: { value: '' } });\n  }\n\n  return (\n    <div>\n      <Dialog open={addTaskModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Добавление задачи</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Введите имя задачи\n          </DialogContentText>\n          <TextField\n            ref={field}\n            {...taskInput}\n            autoFocus\n            margin=\"dense\"\n            label=\"Имя задачи...\"\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Отмена\n          </Button>\n          <Button onClick={handleAdd} color=\"primary\">\n            Добавить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function FormDialog() {\n  const addListModal = useSelector(state => state.addListModal);\n  const dispatch = useDispatch();\n\n  const field = useRef('');\n\n  const useInput = () => {\n    const [value, setValue] = useState(null);\n    const onChange = e => setValue(e.target.value);\n    return { value, onChange };\n  };\n  const taskInput = useInput();\n\n  function handleClose() {\n    dispatch({ type: 'CLOSE_ADD_LIST_MODAL' });\n  }\n\n  function handleAdd() {\n    dispatch({ type: 'CLOSE_ADD_LIST_MODAL' });\n    dispatch({\n      type: 'ADD_LIST',\n      value: {\n        id: `${Math.random() * 1000000 & 0xfffff}`,\n        name: taskInput.value,\n      },\n    });\n    taskInput.onChange({ target: { value: '' } });\n  }\n\n  return (\n    <div>\n      <Dialog open={addListModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Добавление списка</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Введите имя списка\n          </DialogContentText>\n          <TextField\n            ref={field}\n            {...taskInput}\n            autoFocus\n            margin=\"dense\"\n            label=\"Имя списка...\"\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Отмена\n          </Button>\n          <Button onClick={handleAdd} color=\"primary\">\n            Добавить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function AlertDialog() {\n  const deleteListModal = useSelector(state => state.deleteListModal);\n  const dispatch = useDispatch();\n\n  function handleClose() {\n    dispatch({ type: 'CLOSE_DELETE_LIST_MODAL' });\n  }\n\n  function handleDelete() {\n    dispatch({ type: 'CLOSE_DELETE_LIST_MODAL' });\n    dispatch({ type: 'REMOVE_LIST', value: deleteListModal });\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={deleteListModal}\n        onClose={() => handleClose()}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Удалить этот список?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Вы действительно хотите удалить этот список?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose()} color=\"primary\">\n            Отмена\n          </Button>\n          <Button onClick={() => handleDelete(deleteListModal)} color=\"secondary\" autoFocus>\n            Удалить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function CheckboxList({ match }) {\n  const dispatch = useDispatch();\n\n  const { id } = match.params;\n\n  const tasks = useSelector(state => state.tasks);\n  const search = useSelector(state => state.search);\n\n  const classes = useStyles();\n\n  const handleToggle = (taskId) => {\n    dispatch({ type: 'TOGGLE_TASK', value: taskId });\n  };\n\n  const handleRemove = (taskId) => {\n    dispatch({ type: 'OPEN_DELETE_TASK_MODAL', value: taskId });\n  };\n\n  const tasksFilter = (task) => {\n    const re = new RegExp(search, 'i');\n    return re.test(task.name);\n  };\n\n  return (\n    <List className={classes.root}>\n      {tasks.filter(task => task.listId === id).filter(tasksFilter).map(task => (\n        <ListItem\n          key={task.taskId}\n          role={undefined}\n          dense\n          button\n          onClick={() => handleToggle(task.id)}\n        >\n          <ListItemIcon>\n            <Checkbox\n              edge=\"start\"\n              checked={task.checked}\n              tabIndex={-1}\n              disableRipple\n              inputProps={{ 'aria-labelledby': task.checked }}\n            />\n          </ListItemIcon>\n          <ListItemText id={task.checked} primary={task.name} />\n          <ListItemSecondaryAction>\n            <IconButton onClick={() => handleRemove(task.id)} edge=\"end\" aria-label=\"Comments\">\n              <RemoveIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\n\nimport Appbar from './components/Appbar';\nimport Drawer from './components/Drawer';\nimport DeleteTaskModal from './components/DeleteTaskModal';\nimport AddTaskModal from './components/AddTaskModal';\nimport AddListModal from './components/AddListModal';\nimport DeleteListModal from './components/DeleteListModal';\n\nimport Main from './views/Main';\n\nconst App = () => (\n  <Router>\n    <Route path=\"/:id?\" component={Appbar} />\n    <Route path=\"/:id?\" component={Drawer} />\n    <DeleteTaskModal />\n    <DeleteListModal />\n    <AddTaskModal />\n    <AddListModal />\n    <Container fixed style={{ position: 'relative' }}>\n      <Route exact path=\"/:id?\" render={props => <Main key={props.match.params.id} {...props} />} />\n    </Container>\n  </Router>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst drawer = (state = false, { type }) => {\n  switch (type) {\n    case 'TOGGLE_DRAWER':\n      return !state;\n    default:\n      return state;\n  }\n};\n\nconst initialList = [\n  {\n    id: Math.random() * 1000000 & 0xfffff,\n    name: 'Тестовый лист',\n  },\n];\n\nconst lists = (state = initialList, { type, value }) => {\n  switch (type) {\n    case 'ADD_LIST':\n      return [...state, value];\n    case 'REMOVE_LIST':\n      return state.filter(list => list.id !== value);\n    default:\n      return state;\n  }\n};\n\nconst search = (state = '', { type, value }) => {\n  switch (type) {\n    case 'SET_SEARCH':\n      return value;\n    default:\n      return state;\n  }\n};\n\n\nconst tasks = (state = [], { type, value }) => {\n  switch (type) {\n    case 'ADD_TASK':\n      return [...state, value];\n    case 'REMOVE_TASK':\n      return state.filter(task => task.id !== value);\n    case 'TOGGLE_TASK':\n      return state.map((task) => {\n        if (task.id === value) {\n          return Object.assign({}, task, { checked: !task.checked });\n        }\n        return task;\n      });\n    default:\n      return state;\n  }\n};\n\nconst deleteTaskModal = (state = false, { type, value }) => {\n  switch (type) {\n    case 'OPEN_DELETE_TASK_MODAL':\n      return value;\n    case 'CLOSE_DELETE_TASK_MODAL':\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst deleteListModal = (state = false, { type, value }) => {\n  switch (type) {\n    case 'OPEN_DELETE_LIST_MODAL':\n      return value;\n    case 'CLOSE_DELETE_LIST_MODAL':\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst addTaskModal = (state = false, { type, value }) => {\n  switch (type) {\n    case 'OPEN_ADD_TASK_MODAL':\n      return value;\n    case 'CLOSE_ADD_TASK_MODAL':\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst addListModal = (state = false, { type }) => {\n  switch (type) {\n    case 'OPEN_ADD_LIST_MODAL':\n      return true;\n    case 'CLOSE_ADD_LIST_MODAL':\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  drawer,\n  lists,\n  tasks,\n  deleteTaskModal,\n  addTaskModal,\n  addListModal,\n  deleteListModal,\n  search,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport reducers from './reducers';\nimport { saveState, loadState } from './localStorage';\n\nconst persistedState = loadState();\nconst store = createStore(reducers, persistedState);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nserviceWorker.register();\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n\n  }\n};\n"],"sourceRoot":""}